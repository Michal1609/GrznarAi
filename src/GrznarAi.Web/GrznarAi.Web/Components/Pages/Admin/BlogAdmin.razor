@page "/admin/blogs"
@attribute [Authorize]
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using GrznarAi.Web.Data
@using GrznarAi.Web.Services
@inject NavigationManager NavigationManager
@inject IBlogService BlogService
@inject IJSRuntime JSRuntime
@inject ILogger<BlogAdmin> Logger

<PageTitle>Správa blogů</PageTitle>

<h1>Správa blogů</h1>

<div class="mb-3">
    <a href="/admin/blogs/new" class="btn btn-primary">Přidat nový blog</a>
</div>

@if (blogs == null)
{
    <p><em>Načítání blogů...</em></p>
}
else if (!blogs.Any())
{
    <div class="alert alert-info">
        Zatím nebyly přidány žádné blogy. Začněte kliknutím na tlačítko "Přidat nový blog".
    </div>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>Vytvořeno</th>
                <th>Aktualizováno</th>
                <th>Jazykové verze</th>
                <th>Akce</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var blog in blogs)
            {
                <tr>
                    <td>@blog.Id</td>
                    <td>@blog.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@(blog.UpdatedAt.HasValue ? blog.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm") : "-")</td>
                    <td>
                        @if (blog.Contents.Any())
                        {
                            <ul class="list-unstyled mb-0">
                                @foreach (var content in blog.Contents)
                                {
                                    <li>
                                        <span class="badge @(content.IsPublished ? "bg-success" : "bg-secondary")">
                                            @content.LanguageCode
                                        </span>
                                        @content.Title
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <span class="text-muted">Žádné jazykové verze</span>
                        }
                    </td>
                    <td>
                        <a href="/admin/blogs/edit/@blog.Id" class="btn btn-sm btn-secondary me-1">Upravit</a>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteBlog(blog.Id)">Smazat</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Blog>? blogs;

    protected override async Task OnInitializedAsync()
    {
        await LoadBlogs();
    }

    private async Task LoadBlogs()
    {
        blogs = await BlogService.GetBlogsAsync();
        StateHasChanged();
    }

    private async Task DeleteBlog(int blogId)
    {
        Logger.LogInformation("Kliknutí na tlačítko Smazat pro blog ID {BlogId}.", blogId);
        
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Opravdu chcete smazat tento blog?"))
        {
            Logger.LogInformation("Potvrzeno smazání blogu ID {BlogId}.", blogId);
            
            try
            {
                await BlogService.DeleteBlogAsync(blogId);
                Logger.LogInformation("Blog byl úspěšně smazán, načítání seznamu.");
                await LoadBlogs();
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "Chyba při mazání blogu ID {BlogId}", blogId);
                await JSRuntime.InvokeVoidAsync("alert", $"Chyba při mazání blogu: {ex.Message}");
            }
        }
        else
        {
            Logger.LogInformation("Mazání blogu ID {BlogId} bylo zrušeno.", blogId);
        }
    }
} 