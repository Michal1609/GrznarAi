<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="400" viewBox="0 0 1200 400" fill="none" xmlns="http://www.w3.org/2000/svg">
  <!-- Background gradient -->
  <rect width="1200" height="400" fill="url(#paint0_linear)" />
  
  <!-- Code pattern background -->
  <g opacity="0.15" fill="#FFFFFF">
    <text x="100" y="50" font-family="monospace" font-size="12">function initProject() {</text>
    <text x="120" y="70" font-family="monospace" font-size="12">const data = fetchData();</text>
    <text x="120" y="90" font-family="monospace" font-size="12">if (data.isValid) {</text>
    <text x="140" y="110" font-family="monospace" font-size="12">return processData(data);</text>
    <text x="120" y="130" font-family="monospace" font-size="12">}</text>
    <text x="100" y="150" font-family="monospace" font-size="12">}</text>
    
    <text x="100" y="190" font-family="monospace" font-size="12">class Project {</text>
    <text x="120" y="210" font-family="monospace" font-size="12">constructor(name, repo) {</text>
    <text x="140" y="230" font-family="monospace" font-size="12">this.name = name;</text>
    <text x="140" y="250" font-family="monospace" font-size="12">this.repo = repo;</text>
    <text x="120" y="270" font-family="monospace" font-size="12">}</text>
    
    <text x="120" y="310" font-family="monospace" font-size="12">async fetchDetails() {</text>
    <text x="140" y="330" font-family="monospace" font-size="12">const response = await fetch(`/api/projects/${this.name}`);</text>
    <text x="140" y="350" font-family="monospace" font-size="12">return response.json();</text>
    <text x="120" y="370" font-family="monospace" font-size="12">}</text>
    <text x="100" y="390" font-family="monospace" font-size="12">}</text>
    
    <text x="500" y="50" font-family="monospace" font-size="12">import { useState, useEffect } from 'react';</text>
    <text x="500" y="70" font-family="monospace" font-size="12">import { ProjectCard } from './components';</text>
    
    <text x="500" y="110" font-family="monospace" font-size="12">function ProjectList() {</text>
    <text x="520" y="130" font-family="monospace" font-size="12">const [projects, setProjects] = useState([]);</text>
    <text x="520" y="150" font-family="monospace" font-size="12">const [loading, setLoading] = useState(true);</text>
    
    <text x="520" y="190" font-family="monospace" font-size="12">useEffect(() => {</text>
    <text x="540" y="210" font-family="monospace" font-size="12">async function loadProjects() {</text>
    <text x="560" y="230" font-family="monospace" font-size="12">const data = await fetchProjects();</text>
    <text x="560" y="250" font-family="monospace" font-size="12">setProjects(data);</text>
    <text x="560" y="270" font-family="monospace" font-size="12">setLoading(false);</text>
    <text x="540" y="290" font-family="monospace" font-size="12">}</text>
    <text x="540" y="310" font-family="monospace" font-size="12">loadProjects();</text>
    <text x="520" y="330" font-family="monospace" font-size="12">}, []);</text>
    
    <text x="520" y="370" font-family="monospace" font-size="12">return (</text>
    <text x="540" y="390" font-family="monospace" font-size="12">{loading ? <Loader /> : <ProjectGrid projects={projects} />}</text>
    
    <text x="900" y="50" font-family="monospace" font-size="12">public class ProjectController : Controller {</text>
    <text x="920" y="70" font-family="monospace" font-size="12">private readonly IProjectService _projectService;</text>
    
    <text x="920" y="110" font-family="monospace" font-size="12">public ProjectController(IProjectService projectService) {</text>
    <text x="940" y="130" font-family="monospace" font-size="12">_projectService = projectService;</text>
    <text x="920" y="150" font-family="monospace" font-size="12">}</text>
    
    <text x="920" y="190" font-family="monospace" font-size="12">[HttpGet]</text>
    <text x="920" y="210" font-family="monospace" font-size="12">public async Task<IActionResult> GetAll() {</text>
    <text x="940" y="230" font-family="monospace" font-size="12">var projects = await _projectService.GetAllAsync();</text>
    <text x="940" y="250" font-family="monospace" font-size="12">return Ok(projects);</text>
    <text x="920" y="270" font-family="monospace" font-size="12">}</text>
    
    <text x="920" y="310" font-family="monospace" font-size="12">[HttpGet("{id}")]</text>
    <text x="920" y="330" font-family="monospace" font-size="12">public async Task<IActionResult> GetById(string id) {</text>
    <text x="940" y="350" font-family="monospace" font-size="12">var project = await _projectService.GetByIdAsync(id);</text>
    <text x="940" y="370" font-family="monospace" font-size="12">return project == null ? NotFound() : Ok(project);</text>
    <text x="920" y="390" font-family="monospace" font-size="12">}</text>
  </g>
  
  <!-- GitHub logo -->
  <g transform="translate(600, 200) scale(0.8)" opacity="0.7">
    <path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z" fill="#FFFFFF"/>
  </g>
  
  <defs>
    <linearGradient id="paint0_linear" x1="0" y1="0" x2="1200" y2="400" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#2ecc71" />
      <stop offset="1" stop-color="#27ae60" />
    </linearGradient>
  </defs>
</svg>
