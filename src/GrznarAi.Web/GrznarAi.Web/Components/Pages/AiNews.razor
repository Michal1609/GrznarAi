@page "/ai-news"
@page "/ai-news/{SearchTerm}"
@page "/ai-news/page/{PageNumber:int}"
@page "/ai-news/{SearchTerm}/page/{PageNumber:int}"
@page "/ai-news/archive/{Year:int}/{Month:int}"
@page "/ai-news/archive/{Year:int}/{Month:int}/page/{PageNumber:int}"
@rendermode InteractiveServer
@using GrznarAi.Web.Data
@using GrznarAi.Web.Models
@using GrznarAi.Web.Services
@using GrznarAi.Web.Components.Blog
@using PSC.Blazor.Components.MarkdownEditor
@using Microsoft.AspNetCore.WebUtilities
@using System.Globalization
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject GrznarAi.Web.Services.ILocalizationService Localizer
@inject IAiNewsService AiNewsService

<PageTitle>AI News - GrznarAI</PageTitle>

<div class="container">
    <div class="row">
        <!-- Hlavní obsah -->
        <div class="col-md-9">
            <div class="ai-news-container">
                <div class="page-header">
                    <h1 class="display-4">@Localizer.GetString("AiNews.Title")</h1>
                    <p class="lead">@Localizer.GetString("AiNews.Description")</p>
                    
                    @if (ViewModel.IsArchiveFiltering)
                    {
                        <div class="archive-filter-info">
                            <div class="alert alert-info">
                                <i class="bi bi-calendar-event me-2"></i>
                                @Localizer.GetString("AiNews.FilteringByDate"): 
                                <strong>@(DateTimeFormatInfo.CurrentInfo.GetMonthName(ViewModel.Month.Value)) @ViewModel.Year</strong>
                                <a href="/ai-news" class="btn btn-sm btn-outline-secondary ms-2">
                                    <i class="bi bi-x-circle"></i> @Localizer.GetString("Common.Clear")
                                </a>
                            </div>
                        </div>
                    }
                </div>

                <div class="news-filter mb-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" placeholder="@Localizer.GetString("AiNews.SearchPlaceholder")" @bind-value="searchTerm" @bind-value:event="oninput" @onkeyup="HandleSearch" />
                        <button class="btn btn-primary" @onclick="Search">
                            <i class="bi bi-search"></i> @Localizer.GetString("AiNews.Search")
                        </button>
                    </div>
                </div>

                @if (isLoading)
                {
                    <div class="loading-container">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Načítání...</span>
                        </div>
                        <p>@Localizer.GetString("AiNews.Loading")</p>
                    </div>
                }
                else if (ViewModel.Items.Count == 0)
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        @Localizer.GetString("AiNews.NoNews")
                    </div>
                }
                else
                {
                    <div class="news-items">
                        @foreach (var item in ViewModel.Items)
                        {
                            <div class="news-card">
                                <div class="news-card-content">
                                    <div class="row g-0">
                                        <div class="col-md-4 news-image">
                                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                                            {
                                                <img src="@item.ImageUrl" alt="@item.TitleCz" class="img-fluid rounded" />
                                            }
                                            else
                                            {
                                                <img src="/images/UniverzalAiNews.jpg" alt="AI News" class="img-fluid rounded" />
                                            }
                                        </div>
                                        <div class="col-md-8">
                                            <div class="news-content p-3">
                                                <div class="d-flex justify-content-between mb-2">
                                                    <span class="news-source">
                                                        <i class="bi bi-globe"></i> @(string.IsNullOrEmpty(item.SourceName) ? "Unknown Source" : item.SourceName)
                                                    </span>
                                                    <span class="news-date">
                                                        <i class="bi bi-calendar3"></i> @(item.PublishedDate.HasValue ? item.PublishedDate.Value.ToString("d. MMMM yyyy") : "Nedatováno")
                                                    </span>
                                                </div>

                                                <h2 class="news-title">
                                                    <a href="@item.Url" target="_blank" class="news-title-link">
                                                        @item.TitleCz
                                                    </a>
                                                </h2>
                                                
                                                <div class="news-summary">
                                                    @if (IsCzechCulture())
                                                    {
                                                        @item.SummaryCz
                                                    }
                                                    else
                                                    {
                                                        @(string.IsNullOrEmpty(item.SummaryEn) ? item.SummaryCz : item.SummaryEn)
                                                    }
                                                </div>

                                                <div class="news-actions mt-3">
                                                    <a href="@item.Url" target="_blank" class="btn btn-outline-primary">
                                                        <i class="bi bi-box-arrow-up-right"></i> @Localizer.GetString("AiNews.ReadOriginal")
                                                    </a>
                                                    <button class="btn btn-outline-success ms-2" @onclick="() => ShowTranslation(item)">
                                                        <i class="bi bi-translate"></i> @Localizer.GetString("AiNews.CzechTranslation")
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="d-flex justify-content-center mt-4">
                        <nav aria-label="Page navigation">
                            <ul class="pagination">
                                <li class="page-item @(ViewModel.HasPreviousPage ? "" : "disabled")">
                                    <a class="page-link" href="@GetPageUrl(ViewModel.CurrentPage - 1)" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                                
                                @for (int i = Math.Max(1, ViewModel.CurrentPage - 2); i <= Math.Min(ViewModel.TotalPages, ViewModel.CurrentPage + 2); i++)
                                {
                                    var pageNumber = i;
                                    <li class="page-item @(pageNumber == ViewModel.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@GetPageUrl(pageNumber)">@pageNumber</a>
                                    </li>
                                }
                                
                                <li class="page-item @(ViewModel.HasNextPage ? "" : "disabled")">
                                    <a class="page-link" href="@GetPageUrl(ViewModel.CurrentPage + 1)" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            </div>
        </div>
        
        <!-- Postranní panel -->
        <div class="col-md-3">
            <ArchiveCalendar 
                ArchiveMonths="@ViewModel.ArchiveMonths" 
                BaseUrl="/ai-news/archive" />
        </div>
    </div>
</div>

<!-- Modal pro zobrazení překladu článku -->
<div class="modal fade @(isModalOpen ? "show" : "")" id="translationModal" tabindex="-1" role="dialog" aria-labelledby="translationModalLabel" style="@(isModalOpen ? "display:block;" : "display:none;")" aria-hidden="@(!isModalOpen)">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="translationModalLabel">@selectedNews?.TitleCz</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal"></button>
            </div>
            <div class="modal-body">
                @if (selectedNews != null)
                {
                    <div class="translation-content">
                        <MarkdownView Value="@selectedNews.ContentCz" />
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="CloseModal">@Localizer.GetString("Common.Close")</button>
                @if (selectedNews != null)
                {
                    <a href="@selectedNews.Url" target="_blank" class="btn btn-primary">
                        <i class="bi bi-box-arrow-up-right"></i> @Localizer.GetString("AiNews.ReadOriginal")
                    </a>
                }
            </div>
        </div>
    </div>
</div>

@if (isModalOpen)
{
    <div class="modal-backdrop fade show" @onclick="CloseModal"></div>
}

@code {
    [Parameter]
    public string SearchTerm { get; set; }

    [Parameter]
    public int PageNumber { get; set; } = 1;
    
    [Parameter]
    public int? Year { get; set; }
    
    [Parameter]
    public int? Month { get; set; }

    private string searchTerm = "";
    private bool isModalOpen = false;
    private bool isLoading = true;
    private AiNewsItem selectedNews;
    private AiNewsViewModel ViewModel { get; set; } = new AiNewsViewModel();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(SearchTerm))
        {
            searchTerm = SearchTerm;
        }

        if (PageNumber < 1)
        {
            PageNumber = 1;
        }

        ViewModel.CurrentPage = PageNumber;
        ViewModel.SearchTerm = searchTerm;
        ViewModel.Year = Year;
        ViewModel.Month = Month;

        await LoadNewsAsync();
        await LoadArchiveMonthsAsync();
    }
    
    // Metoda pro zjištění, zda je aktuální kultura česká
    private bool IsCzechCulture()
    {
        return CultureInfo.CurrentUICulture.Name.StartsWith("cs", StringComparison.OrdinalIgnoreCase);
    }

    private async Task LoadNewsAsync()
    {
        isLoading = true;

        try
        {
            var result = await AiNewsService.GetAiNewsAsync(
                ViewModel.CurrentPage,
                ViewModel.PageSize,
                string.IsNullOrWhiteSpace(ViewModel.SearchTerm) ? null : ViewModel.SearchTerm,
                ViewModel.Year,
                ViewModel.Month
            );

            ViewModel.Items = result.Items;
            ViewModel.TotalCount = result.TotalCount;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Chyba při načítání dat: {ex.Message}");
            ViewModel.Items = new List<AiNewsItem>();
            ViewModel.TotalCount = 0;
        }

        isLoading = false;
    }

    private async Task LoadArchiveMonthsAsync()
    {
        try
        {
            ViewModel.ArchiveMonths = await AiNewsService.GetArchiveMonthsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Chyba při načítání archivních měsíců: {ex.Message}");
            ViewModel.ArchiveMonths = new List<(int Year, int Month, int Count)>();
        }
    }

    private void HandleSearch(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Search();
        }
    }

    private void Search()
    {
        ViewModel.SearchTerm = searchTerm;
        ViewModel.CurrentPage = 1;
        NavigateToPage(1);
    }

    private void NavigateToPage(int pageNumber)
    {
        string url;
        
        if (ViewModel.IsArchiveFiltering)
        {
            url = $"/ai-news/archive/{ViewModel.Year}/{ViewModel.Month}";
            if (pageNumber > 1)
            {
                url += $"/page/{pageNumber}";
            }
        }
        else
        {
            url = string.IsNullOrWhiteSpace(searchTerm)
                ? (pageNumber > 1 ? $"/ai-news/page/{pageNumber}" : "/ai-news")
                : $"/ai-news/{Uri.EscapeDataString(searchTerm)}" + (pageNumber > 1 ? $"/page/{pageNumber}" : "");
        }

        NavigationManager.NavigateTo(url);
    }

    private string GetPageUrl(int pageNumber)
    {
        if (ViewModel.IsArchiveFiltering)
        {
            return $"/ai-news/archive/{ViewModel.Year}/{ViewModel.Month}" + (pageNumber > 1 ? $"/page/{pageNumber}" : "");
        }
        
        return string.IsNullOrWhiteSpace(searchTerm)
            ? (pageNumber > 1 ? $"/ai-news/page/{pageNumber}" : "/ai-news")
            : $"/ai-news/{Uri.EscapeDataString(searchTerm)}" + (pageNumber > 1 ? $"/page/{pageNumber}" : "");
    }

    private void ShowTranslation(AiNewsItem newsItem)
    {
        selectedNews = newsItem;
        isModalOpen = true;
    }

    private void CloseModal()
    {
        isModalOpen = false;
        StateHasChanged();
    }
} 