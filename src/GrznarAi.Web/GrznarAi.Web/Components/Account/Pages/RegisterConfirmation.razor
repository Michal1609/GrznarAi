@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using GrznarAi.Web.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Potvrzení registrace</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h1 class="h4 mb-0">Potvrzení registrace</h1>
                </div>
                <div class="card-body">
                    <StatusMessage Message="@statusMessage" />

                    <div class="text-center mb-4">
                        <i class="bi bi-envelope-check fs-1 text-success"></i>
                    </div>

                    <h2 class="card-title text-center mb-4">Děkujeme za registraci!</h2>
                    
                    <p class="card-text text-center">
                        Na váš e-mail <strong>@Email</strong> jsme odeslali odkaz pro potvrzení účtu.
                    </p>

                    <p class="card-text text-center">
                        Prosím zkontrolujte svou e-mailovou schránku a klikněte na odkaz v e-mailu pro dokončení registrace.
                    </p>

                    <div class="alert alert-info mt-4">
                        <i class="bi bi-info-circle me-2"></i>
                        Pokud e-mail nevidíte, zkontrolujte složku nevyžádané pošty (spam) nebo si <a href="/Account/ResendEmailConfirmation">nechte poslat nový potvrzovací e-mail</a>.
                    </div>
                </div>
                <div class="card-footer text-center">
                    <a href="/" class="btn btn-outline-primary">Zpět na hlavní stránku</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Chyba při hledání uživatele s tímto e-mailem";
        }
    }
}
